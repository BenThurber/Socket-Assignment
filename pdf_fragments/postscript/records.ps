%!PS-Adobe-3.0
%%Title: records.py
%%For: Ben
%%Creator: VIM - Vi IMproved 7.3 (2010 Aug 15)
%%CreationDate: Sat Aug 17 10:15:51 2019
%%DocumentData: Clean8Bit
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%BoundingBox: 59 49 564 800
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%DocumentSuppliedResources: procset VIM-Prolog 1.4 1
%%+ encoding VIM-latin1 1.0 0
%%Requirements: duplex collate color
%%EndComments
%%BeginDefaults
%%PageResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%PageMedia: A4
%%EndDefaults
%%BeginProlog
%%BeginResource: procset VIM-Prolog
%%BeginDocument: /usr/share/vim/vim73/print/prolog.ps
%!PS-Adobe-3.0 Resource-ProcSet
%%Title: VIM-Prolog
%%Version: 1.4 1
%%EndComments
% Editing of this file is NOT RECOMMENDED.  You run a very good risk of causing
% all PostScript printing from VIM failing if you do.  PostScript is not called
% a write-only language for nothing!
/packedarray where not{userdict begin/setpacking/pop load def/currentpacking
false def end}{pop}ifelse/CP currentpacking def true setpacking
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/d/def ld
/db{dict begin}bd/cde{currentdict end}bd
/T true d/F false d
/SO null d/sv{/SO save d}bd/re{SO restore}bd
/L2 systemdict/languagelevel 2 copy known{get exec}{pop pop 1}ifelse 2 ge d
/m/moveto ld/s/show ld /ms{m s}bd /g/setgray ld/r/setrgbcolor ld/sp{showpage}bd
/gs/gsave ld/gr/grestore ld/cp/currentpoint ld
/ul{gs UW setlinewidth cp UO add 2 copy newpath m 3 1 roll add exch lineto
stroke gr}bd
/bg{gs r cp BO add 4 -2 roll rectfill gr}bd
/sl{90 rotate 0 exch translate}bd
L2{
/sspd{mark exch{setpagedevice}stopped cleartomark}bd
/nc{1 db/NumCopies ed cde sspd}bd
/sps{3 db/Orientation ed[3 1 roll]/PageSize ed/ImagingBBox null d cde sspd}bd
/dt{2 db/Tumble ed/Duplex ed cde sspd}bd
/c{1 db/Collate ed cde sspd}bd
}{
/nc{/#copies ed}bd
/sps{statusdict/setpage get exec}bd
/dt{statusdict/settumble 2 copy known{get exec}{pop pop pop}ifelse
statusdict/setduplexmode 2 copy known{get exec}{pop pop pop}ifelse}bd
/c{pop}bd
}ifelse
/ffs{findfont exch scalefont d}bd/sf{setfont}bd
/ref{1 db findfont dup maxlength dict/NFD ed{exch dup/FID ne{exch NFD 3 1 roll
put}{pop pop}ifelse}forall/Encoding findresource dup length 256 eq{NFD/Encoding
3 -1 roll put}{pop}ifelse NFD dup/FontType get 3 ne{/CharStrings}{/CharProcs}
ifelse 2 copy known{2 copy get dup maxlength dict copy[/questiondown/space]{2
copy known{2 copy get 2 index/.notdef 3 -1 roll put pop exit}if pop}forall put
}{pop pop}ifelse dup NFD/FontName 3 -1 roll put NFD definefont pop end}bd
CP setpacking
(\004)cvn{}bd
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%BeginResource: encoding VIM-latin1
%%BeginDocument: /usr/share/vim/vim73/print/latin1.ps
%!PS-Adobe-3.0 Resource-Encoding
%%Title: VIM-latin1
%%Version: 1.0 0
%%EndComments
/VIM-latin1[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis]
/Encoding defineresource pop
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%EndProlog
%%BeginSetup
595 842 0 sps
1 nc
T F dt
T c
%%IncludeResource: font Courier
/_F0 /VIM-latin1 /Courier ref
/F0 10 /_F0 ffs
%%IncludeResource: font Courier-Bold
/_F1 /VIM-latin1 /Courier-Bold ref
/F1 10 /_F1 ffs
%%IncludeResource: font Courier-Oblique
/_F2 /VIM-latin1 /Courier-Oblique ref
/F2 10 /_F2 ffs
%%IncludeResource: font Courier-BoldOblique
/_F3 /VIM-latin1 /Courier-BoldOblique ref
/F3 10 /_F3 ffs
/UO -1 d
/UW 0.5 d
/BO -2.5 d
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(records.py                                                                    Page 1)59.5 792.4 ms
F0 sf
0 0 0.753 r
("""A module containing FileRequest and FileResponse which are )59.5 772.4 ms
(subclasses of Record, which is a subclasses of Packet )59.5 762.4 ms
(\(as defined in packet.py\).  FileRequest and FileResponse arrange )59.5 752.4 ms
(packets \(bytearrays\) in the arrangement specific to each type.)59.5 742.4 ms
(The following is the inheritance tree.)59.5 722.4 ms
(          Packet)59.5 702.4 ms
(            |)59.5 692.4 ms
(            V)59.5 682.4 ms
(          Record)59.5 672.4 ms
(          |    |)59.5 662.4 ms
(          V    V)59.5 652.4 ms
(FileRequest    FileResponse)59.5 642.4 ms
(""")59.5 622.4 ms
0.753 0 0.753 r
(from)59.5 602.4 ms
0 g
( collections )s
0.753 0 0.753 r
(import)s
0 g
( OrderedDict)s
0.753 0 0.753 r
(from)59.5 592.4 ms
0 g
( packet )s
0.753 0 0.753 r
(import)s
0 g
( Packet)s
0.753 0 0.753 r
(import)59.5 582.4 ms
0 g
( math)s
(BYTE_LEN = )59.5 562.4 ms
0 0 0.753 r
(8)s
0 g
(BLOCK_SIZE = )59.5 552.4 ms
0 0 0.753 r
(4096)s
0 g
(ENCODING_TYPE = )59.5 542.4 ms
0 0 0.753 r
("UTF-8")s
0 g
(FILE_REQUEST_MAGIC_NO = )59.5 522.4 ms
0 0 0.753 r
(0x497E)s
0 g
(   )s
0.753 0 0 r
(# Is it in network byte order?)s
0 g
(FILE_REQUEST_TYPE = )59.5 512.4 ms
0 0 0.753 r
(1)s
0 g
(MAX_FILENAME_LEN = )59.5 502.4 ms
0 0 0.753 r
(1024)s
0 g
(FILE_RESPONSE_MAGIC_NO = )59.5 482.4 ms
0 0 0.753 r
(0x497E)s
0 g
(FILE_RESPONSE_TYPE = )59.5 472.4 ms
0 0 0.753 r
(2)s
0 0.502 0 r
(class)59.5 432.4 ms
0 g
( )s
0.502 0.502 0 r
(Record)s
0 g
(\(Packet\):)s
(    )59.5 422.4 ms
0 0 0.753 r
("""A class between Packet and FileRequest, FileResponse )s
(    that adds the header and payload to the internal )59.5 412.4 ms
(    bytearray \(via append in Packet class\).""")59.5 402.4 ms
0 g
(    )59.5 392.4 ms
(    )59.5 382.4 ms
(    )59.5 372.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(__init__)s
0 g
(\(self, header_dict, payload_bytes\):)s
(        payload_bit_len = )59.5 362.4 ms
0.502 0.502 0 r
(len)s
0 g
(\(payload_bytes\) * BYTE_LEN)s
(        )59.5 352.4 ms
(        packet_bit_len = )59.5 342.4 ms
0.502 0.502 0 r
(sum)s
0 g
(\(bit_len )s
0 0.502 0 r
(for)s
0 g
( bit_len, _ )s
0 0.502 0 r
(in)s
0 g
( header_dict.values\(\)\) )s
0.753 0 0.753 r
(\\)s
0 g
(            + payload_bit_len)59.5 332.4 ms
(        )59.5 322.4 ms
0.502 0.502 0 r
(super)s
0 g
(\(\).__init__\(packet_bit_len\)  )s
0.753 0 0 r
(# Call constructor of Packet)s
0 g
(        self._append_header_dictionary\(header_dict\))59.5 312.4 ms
(        self._append_payload\(payload_bytes\))59.5 302.4 ms
(    )59.5 292.4 ms
(    )59.5 282.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(_append_header_dictionary)s
0 g
(\(self, dictionary\):)s
(        )59.5 272.4 ms
0 0 0.753 r
("""Helper function that takes an OrderedDict of values )s
(        \(bit_len, value\).  Adds each value to the internal )59.5 262.4 ms
(        bytearray in order.""")59.5 252.4 ms
0 g
(        )59.5 242.4 ms
0 0.502 0 r
(for)s
0 g
( bit_len, value )s
0 0.502 0 r
(in)s
0 g
( dictionary.values\(\):)s
(            self.append\(value, bit_len\))59.5 232.4 ms
(    )59.5 222.4 ms
(    )59.5 212.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(_append_payload)s
0 g
(\(self, payload_bytearray\):)s
(        )59.5 202.4 ms
0 0 0.753 r
("""Takes each byte from payload_bytearray and adds )s
(        it to the internal bytearray.""")59.5 192.4 ms
0 g
(        )59.5 182.4 ms
0 0.502 0 r
(for)s
0 g
( byte )s
0 0.502 0 r
(in)s
0 g
( payload_bytearray:)s
(            self.append\(byte, BYTE_LEN\))59.5 172.4 ms
(    )59.5 162.4 ms
0 0.502 0 r
(class)59.5 132.4 ms
0 g
( )s
0.502 0.502 0 r
(FileRequest)s
0 g
(\(Record\):)s
(    )59.5 122.4 ms
0 0 0.753 r
('''An object that creates a bytearray representing a )s
(    FileRequest.  Includes static methods for checking )59.5 112.4 ms
(    the validity of a recieved FileRequest, and extracting )59.5 102.4 ms
(    relevent fields.  The payload is of size FilenameLen bytes.)59.5 92.4 ms
(    includes a static OrderedDict of the header with structure:)59.5 82.4 ms
(    "FieldName" : [BitLen, Value] )59.5 72.4 ms
(    \(Value is None for dynamic fields\))59.5 62.4 ms
(    )59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 2 2
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(records.py                                                                    Page 2)59.5 792.4 ms
F0 sf
0 0 0.753 r
(    By length in bits, a FileRequest header has the following )59.5 772.4 ms
(    fields:)59.5 762.4 ms
(    "MagicNo", 16)59.5 752.4 ms
(    "Type", 8)59.5 742.4 ms
(    "FilenameLen", 16)59.5 732.4 ms
(    "")59.5 722.4 ms
(    ''')59.5 712.4 ms
0 g
(    )59.5 702.4 ms
(    HEADER_DICT = OrderedDict\(\()59.5 692.4 ms
(                \()59.5 682.4 ms
0 0 0.753 r
("MagicNo")s
0 g
(, [)s
0 0 0.753 r
(16)s
0 g
(, FILE_REQUEST_MAGIC_NO]\), )s
(                \()59.5 672.4 ms
0 0 0.753 r
("Type")s
0 g
(, [)s
0 0 0.753 r
(8)s
0 g
(, FILE_REQUEST_TYPE]\), )s
(                \()59.5 662.4 ms
0 0 0.753 r
("FilenameLen")s
0 g
(, [)s
0 0 0.753 r
(16)s
0 g
(, )s
0.502 0.502 0 r
(None)s
0 g
(]\),)s
(            \)\)    )59.5 652.4 ms
(    )59.5 642.4 ms
(    )59.5 632.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(__init__)s
0 g
(\(self, file_name\):)s
(        )59.5 622.4 ms
0 0 0.753 r
("""Takes a filename string.""")s
0 g
(        )s
(        file_name_bytes = file_name.encode\(ENCODING_TYPE\))59.5 612.4 ms
(        )59.5 602.4 ms
(        self.HEADER_DICT[)59.5 592.4 ms
0 0 0.753 r
("FilenameLen")s
0 g
(][-)s
0 0 0.753 r
(1)s
0 g
(] = )s
0.502 0.502 0 r
(len)s
0 g
(\(file_name_bytes\))s
(        )59.5 582.4 ms
(        )59.5 572.4 ms
0.502 0.502 0 r
(super)s
0 g
(\(\).__init__\(self.HEADER_DICT, file_name_bytes\))s
(        )59.5 562.4 ms
(    )59.5 552.4 ms
(    )59.5 542.4 ms
0.753 0 0.753 r
(@)s
0.502 0.502 0 r
(staticmethod)s
0 g
(    )59.5 532.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(get_filenameLen_from_header)s
0 g
(\(packet_bytearray\):)s
(        )59.5 522.4 ms
0 0 0.753 r
("""Takes a bytearray representing a FileRequest )s
(        header.  Extracts the filenameLen.""")59.5 512.4 ms
0 g
(        pkt = Packet\()59.5 502.4 ms
0.502 0.502 0 r
(len)s
0 g
(\(packet_bytearray\)*BYTE_LEN, packet_bytearray\))s
(        )59.5 492.4 ms
0 0.502 0 r
(try)s
0 g
(:)s
(            MagicNo_len = FileRequest.HEADER_DICT[)59.5 482.4 ms
0 0 0.753 r
("MagicNo")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(            Type_len = FileRequest.HEADER_DICT[)59.5 472.4 ms
0 0 0.753 r
("Type")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(            FilenameLen_len = FileRequest.HEADER_DICT[)59.5 462.4 ms
0 0 0.753 r
("FilenameLen")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(            FilenameLen = pkt.get_from_bits\()59.5 452.4 ms
(                )59.5 442.4 ms
0 0 0.753 r
(1)s
0 g
(+MagicNo_len+Type_len, MagicNo_len+Type_len+FilenameLen_len)s
(            \))59.5 432.4 ms
(            )59.5 422.4 ms
0 0.502 0 r
(return)s
0 g
( FilenameLen)s
(        )59.5 412.4 ms
0 0.502 0 r
(except)s
0 g
( )s
0 0.502 0 r
(IndexError)s
0 g
(:)s
(            )59.5 402.4 ms
0 0.502 0 r
(raise)s
0 g
( )s
0 0.502 0 r
(ValueError)s
0 g
(\()s
0 0 0.753 r
("Invalid FileRequest header")s
0 g
(\))s
(    )59.5 392.4 ms
(    )59.5 382.4 ms
(    )59.5 372.4 ms
0.753 0 0.753 r
(@)s
0.502 0.502 0 r
(staticmethod)s
0 g
(    )59.5 362.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(is_valid_header)s
0 g
(\(packet_bytearray\):)s
(        )59.5 352.4 ms
0 0 0.753 r
("""Takes a bytearray is checks if it is a valid FileRequest )s
(        header.  For the method to return True: )59.5 342.4 ms
(        MagicNo == 0x497E, )59.5 332.4 ms
(        Type == 1, )59.5 322.4 ms
(        1 <= FilenameLen <= 1,024)59.5 312.4 ms
(        """)59.5 302.4 ms
0 g
(        is_valid = )59.5 292.4 ms
0.502 0.502 0 r
(True)s
0 g
(        pkt = Packet\()59.5 282.4 ms
0.502 0.502 0 r
(len)s
0 g
(\(packet_bytearray\)*BYTE_LEN, packet_bytearray\))s
(        )59.5 272.4 ms
(        MagicNo_len = FileRequest.HEADER_DICT[)59.5 262.4 ms
0 0 0.753 r
("MagicNo")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(        Type_len = FileRequest.HEADER_DICT[)59.5 252.4 ms
0 0 0.753 r
("Type")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(        FilenameLen_len = FileRequest.HEADER_DICT[)59.5 242.4 ms
0 0 0.753 r
("FilenameLen")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(        )59.5 232.4 ms
(        MagicNo = pkt.get_from_bits\()59.5 222.4 ms
0 0 0.753 r
(0)s
0 g
(, MagicNo_len\))s
(        )59.5 212.4 ms
0 0.502 0 r
(if)s
0 g
( MagicNo != FILE_REQUEST_MAGIC_NO:)s
(            is_valid = )59.5 202.4 ms
0.502 0.502 0 r
(False)s
0 g
(        )59.5 192.4 ms
(        Type = pkt.get_from_bits\()59.5 182.4 ms
0 0 0.753 r
(1)s
0 g
(+MagicNo_len, MagicNo_len+Type_len\))s
(        )59.5 172.4 ms
0 0.502 0 r
(if)s
0 g
( Type != FILE_REQUEST_TYPE:)s
(            is_valid = )59.5 162.4 ms
0.502 0.502 0 r
(False)s
0 g
(        )59.5 152.4 ms
(        FilenameLen = pkt.get_from_bits\()59.5 142.4 ms
(            )59.5 132.4 ms
0 0 0.753 r
(1)s
0 g
(+MagicNo_len+Type_len, MagicNo_len+Type_len+FilenameLen_len)s
(        \))59.5 122.4 ms
(        )59.5 112.4 ms
0 0.502 0 r
(if)s
0 g
( )s
0 0.502 0 r
(not)s
0 g
( \()s
0 0 0.753 r
(1)s
0 g
( <= FilenameLen <= MAX_FILENAME_LEN\):)s
(            is_valid = )59.5 102.4 ms
0.502 0.502 0 r
(False)s
0 g
(        )59.5 92.4 ms
(        )59.5 82.4 ms
0 0.502 0 r
(return)s
0 g
( is_valid)s
(    )59.5 72.4 ms
(    )59.5 62.4 ms
(    )59.5 52.4 ms
0.753 0 0.753 r
(@)s
0.502 0.502 0 r
(staticmethod)s
re sp
%%PageTrailer
%%Page: 3 3
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(records.py                                                                    Page 3)59.5 792.4 ms
F0 sf
(    )59.5 772.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(header_bit_len)s
0 g
(\(\):)s
(        )59.5 762.4 ms
0 0 0.753 r
("""Returns the len of the header in bits.""")s
0 g
(        )59.5 752.4 ms
0 0.502 0 r
(try)s
0 g
(:)s
(            )59.5 742.4 ms
0 0.502 0 r
(return)s
0 g
( )s
0.502 0.502 0 r
(sum)s
0 g
(\(bit_len )s
0 0.502 0 r
(for)s
0 g
( bit_len, _ )s
0 0.502 0 r
(in)s
0 g
( FileRequest.HEADER_DICT.values\(\)\))s
(        )59.5 732.4 ms
0 0.502 0 r
(except)s
0 g
( )s
0 0.502 0 r
(NameError)s
0 g
(:)s
(            )59.5 722.4 ms
0 0.502 0 r
(return)s
0 g
( )s
0 0 0.753 r
(0)s
0 g
(    )59.5 712.4 ms
(    )59.5 702.4 ms
0.753 0 0.753 r
(@)s
0.502 0.502 0 r
(staticmethod)s
0 g
(    )59.5 692.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(header_byte_len)s
0 g
(\(\):)s
(        )59.5 682.4 ms
0 0 0.753 r
("""Returns the len of the header in bits.""")s
0 g
(        )59.5 672.4 ms
0 0.502 0 r
(return)s
0 g
( math.ceil\(FileRequest.header_bit_len\(\) / BYTE_LEN\)    )s
0 0.502 0 r
(class)59.5 642.4 ms
0 g
( )s
0.502 0.502 0 r
(FileResponse)s
0 g
(\(Record\):)s
(    )59.5 632.4 ms
0 0 0.753 r
('''An object that creates a bytearray representing a )s
(    FileResponse.  Includes static methods for checking )59.5 622.4 ms
(    the validity of a recieved FileResponse, and extracting )59.5 612.4 ms
(    relevent fields.  The payload is of size DataLen bytes.  )59.5 602.4 ms
(    Includes a static OrderedDict of the header with structure: )59.5 592.4 ms
(    "FieldName" : [BitLen, Value] )59.5 582.4 ms
(    \(Value is None for dynamic fields\))59.5 572.4 ms
(    )59.5 562.4 ms
(    By length in bits, a FileRequest header has the following )59.5 552.4 ms
(    fields:)59.5 542.4 ms
(    "MagicNo", 16)59.5 532.4 ms
(    "Type", 8)59.5 522.4 ms
(    "StatusCode", 8)59.5 512.4 ms
(    "DataLen", 32)59.5 502.4 ms
(    "")59.5 492.4 ms
(    )59.5 482.4 ms
(    FileResponse is initialized with a file_name and a status )59.5 472.4 ms
(    code.  Unlike FileRequest, FileResponse does not read )59.5 462.4 ms
(    the payload into memory.  If .get_bytearray\(\) is called, )59.5 452.4 ms
(    the whole file is read from file_name and the header and )59.5 442.4 ms
(    file are returned as a bytearray.  The method )59.5 432.4 ms
(    .read_byte_block\(\) is an itterator that opens a file handle )59.5 422.4 ms
(    on file_name and returns an amount of bytes equal to )59.5 412.4 ms
(    BLOCK_SIZE.  First returns header + a part of the file as a )59.5 402.4 ms
(    bytearray, then returns an amount of the file equal to )59.5 392.4 ms
(    BLOCK_SIZE on each following itteration.  When the whole )59.5 382.4 ms
(    file is transfered, the file handle is closed.)59.5 372.4 ms
(    ''')59.5 362.4 ms
0 g
(    )s
(    )59.5 352.4 ms
(    HEADER_DICT = OrderedDict\(\()59.5 342.4 ms
(            \()59.5 332.4 ms
0 0 0.753 r
("MagicNo")s
0 g
(, [)s
0 0 0.753 r
(16)s
0 g
(, FILE_RESPONSE_MAGIC_NO]\), )s
(            \()59.5 322.4 ms
0 0 0.753 r
("Type")s
0 g
(, [)s
0 0 0.753 r
(8)s
0 g
(, FILE_RESPONSE_TYPE]\), )s
(            \()59.5 312.4 ms
0 0 0.753 r
("StatusCode")s
0 g
(, [)s
0 0 0.753 r
(8)s
0 g
(, )s
0.502 0.502 0 r
(None)s
0 g
(]\),)s
(            \()59.5 302.4 ms
0 0 0.753 r
("DataLen")s
0 g
(, [)s
0 0 0.753 r
(32)s
0 g
(, )s
0.502 0.502 0 r
(None)s
0 g
(]\),)s
(        \)\))59.5 292.4 ms
(    )59.5 282.4 ms
(    )59.5 272.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(__init__)s
0 g
(\(self, file_name, status_code\):)s
(        )59.5 262.4 ms
0 0 0.753 r
("""Takes a bytearray that containing a file, and a )s
(        integer status_code.  If status_code == 0 then )59.5 252.4 ms
(        no payload is written to the packet.""")59.5 242.4 ms
0 g
(        )59.5 232.4 ms
(        self.HEADER_DICT[)59.5 222.4 ms
0 0 0.753 r
("StatusCode")s
0 g
(][-)s
0 0 0.753 r
(1)s
0 g
(] = status_code)s
(        self.HEADER_DICT[)59.5 212.4 ms
0 0 0.753 r
("DataLen")s
0 g
(][-)s
0 0 0.753 r
(1)s
0 g
(] = self._file_len\(\))s
(        )59.5 202.4 ms
(        )59.5 192.4 ms
0.502 0.502 0 r
(super)s
0 g
(\(\).__init__\(self.HEADER_DICT, )s
0.502 0.502 0 r
(bytearray)s
0 g
(\()s
0 0 0.753 r
(0)s
0 g
(\)\))s
(    )59.5 182.4 ms
(    )59.5 172.4 ms
(    )59.5 162.4 ms
(    )59.5 152.4 ms
0.753 0 0.753 r
(@)s
0.502 0.502 0 r
(staticmethod)s
0 g
(    )59.5 142.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(get_status_DataLen)s
0 g
(\(packet_bytearray\):)s
(        )59.5 132.4 ms
0 0 0.753 r
("""Takes a bytearray representing a FileRequest )s
(        header.  Returns \(StatusCode, DataLen\).""")59.5 122.4 ms
0 g
(        pkt = Packet\()59.5 112.4 ms
0.502 0.502 0 r
(len)s
0 g
(\(packet_bytearray\)*BYTE_LEN, packet_bytearray\))s
(        )59.5 102.4 ms
0 0.502 0 r
(try)s
0 g
(:)s
(            MagicNo_len = FileResponse.HEADER_DICT[)59.5 92.4 ms
0 0 0.753 r
("MagicNo")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(            Type_len = FileResponse.HEADER_DICT[)59.5 82.4 ms
0 0 0.753 r
("Type")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(            StatusCode_len = FileResponse.HEADER_DICT[)59.5 72.4 ms
0 0 0.753 r
("StatusCode")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(            DataLen_len = FileResponse.HEADER_DICT[)59.5 62.4 ms
0 0 0.753 r
("DataLen")s
0 g
(][)s
0 0 0.753 r
(0)s
0 g
(])s
(            StatusCode = pkt.get_from_bits\()59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 4 4
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(records.py                                                                    Page 4)59.5 792.4 ms
F0 sf
(                )59.5 772.4 ms
0 0 0.753 r
(1)s
0 g
( + MagicNo_len + Type_len, )s
(                MagicNo_len + Type_len + StatusCode_len)59.5 762.4 ms
(            \))59.5 752.4 ms
(            DataLen = pkt.get_from_bits\()59.5 742.4 ms
(                )59.5 732.4 ms
0 0 0.753 r
(1)s
0 g
( + MagicNo_len + Type_len + StatusCode_len, )s
(                MagicNo_len + Type_len + StatusCode_len + DataLen_len)59.5 722.4 ms
(            \))59.5 712.4 ms
(            )59.5 702.4 ms
0 0.502 0 r
(return)s
0 g
( StatusCode, DataLen)s
(        )59.5 692.4 ms
0 0.502 0 r
(except)s
0 g
( )s
0 0.502 0 r
(IndexError)s
0 g
(:)s
(            )59.5 682.4 ms
0 0.502 0 r
(raise)s
0 g
( )s
0 0.502 0 r
(ValueError)s
0 g
(\()s
0 0 0.753 r
("Invalid FileRequest header")s
0 g
(\)    )s
(    )59.5 672.4 ms
(    )59.5 662.4 ms
0.753 0 0.753 r
(@)s
0.502 0.502 0 r
(staticmethod)s
0 g
(    )59.5 652.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(is_valid_FileResponse)s
0 g
(\(packet_bytearray\):)s
(        )59.5 642.4 ms
0 0 0.753 r
("""Not implemented yet""")s
0 g
(        )59.5 632.4 ms
0 0.502 0 r
(return)s
0 g
( )s
0.502 0.502 0 r
(True)s
0 g
(    )59.5 622.4 ms
(    )59.5 612.4 ms
0.753 0 0.753 r
(@)s
0.502 0.502 0 r
(staticmethod)s
0 g
(    )59.5 602.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(header_bit_len)s
0 g
(\(\):)s
(        )59.5 592.4 ms
0 0 0.753 r
("""Returns the len of the header in bits.""")s
0 g
(        )59.5 582.4 ms
0 0.502 0 r
(try)s
0 g
(:)s
(            )59.5 572.4 ms
0 0.502 0 r
(return)s
0 g
( )s
0.502 0.502 0 r
(sum)s
0 g
(\(bit_len )s
0 0.502 0 r
(for)s
0 g
( bit_len, _ )s
0 0.502 0 r
(in)s
0 g
( FileResponse.HEADER_DICT.values\(\)\))s
(        )59.5 562.4 ms
0 0.502 0 r
(except)s
0 g
( )s
0 0.502 0 r
(NameError)s
0 g
(:)s
(            )59.5 552.4 ms
0 0.502 0 r
(return)s
0 g
( )s
0 0 0.753 r
(0)s
0 g
(    )59.5 542.4 ms
(    )59.5 532.4 ms
0.753 0 0.753 r
(@)s
0.502 0.502 0 r
(staticmethod)s
0 g
(    )59.5 522.4 ms
0 0.502 0 r
(def)s
0 g
( )s
0.502 0.502 0 r
(header_byte_len)s
0 g
(\(\):)s
(        )59.5 512.4 ms
0 0 0.753 r
("""Returns the len of the header in bits.""")s
0 g
(        )59.5 502.4 ms
0 0.502 0 r
(return)s
0 g
( math.ceil\(FileResponse.header_bit_len\(\) / BYTE_LEN\)    )s
re sp
%%PageTrailer
%%Trailer
%%Pages: 4
%%EOF
